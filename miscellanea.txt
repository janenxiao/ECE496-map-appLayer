npm start		// start program
node filename.js	// run js file
curl 127.0.0.1:5000
curl 149.248.4.73:5000/result/
chrome://inspect/#devices	// debug with chrome devtools
https://myoldserver.tk/users/sign_in	// cc's server (janenxiao W..22....)
npm install ws --save-dev
python dependency:
pip install websocket_client

todo:
receive car position info from websocket in main, create event 'carpoint' in main.js

guide:
Mapbox GL style #layers: https://docs.mapbox.com/mapbox-gl-js/style-spec/#layers
Mapbox Tilequery API: https://docs.mapbox.com/playground/tilequery
Create geojson: http://geojson.io
Lnglat to xy coordinates: https://stackoverflow.com/questions/1369512/converting-longitude-latitude-to-x-y-on-a-map-with-calibration-points
Install npm on ubuntu: https://tecadmin.net/install-latest-nodejs-npm-on-ubuntu
Python GUI tool wxpython vs tkinter

git notes:
remote
- origin	  https://github.com/janenxiao/ECE496-map-appLayer.git
- ccserver  https://www.myoldserver.tk/janenxiao/ece496-map-applayer.git
git checkout <branch>// switch branch; 
git clone// clone a repo into a newly created directory; 
git pull// fetch from remote and merge into your local branch; 
git pull --rebase// put everything you've changed to your local branch on top of things pulled down from remote—later you actually commit on top of the remote branch (reasonable when changes are small); 
git status and git branch -a are helpful checkups; 
git reflog// show reference logs of the update history of local repo; 
git reset --hard <version>// revert to a previous version and discard all local changes; 
git add . // stage all files (new files and deleted files) in current and subdirectories; 
git add -u // stage all tracked files, ignoring untracked files
git add -A // stage all files (new files and deleted files) in current and subdirectories as well as higher directories that still belong to the same git repository; 
git fetch // download new data from a remote repository - but doesn't integrate any of this new data into your working files, so safe operation; 
git diff --name-only origin/develop // list files in your workspace that're different from remote develop branch; 
git diff origin/develop folder/file.java // list differences in the specific file;
git push/create GCR in 3 steps:
•	git add -A
•	git commit -m "<commit message>
•	git push origin <branch>
vim in git: i for insert mode; <esc> to return to normal mode; :wq to save and quit